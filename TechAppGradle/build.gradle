/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
	  mavenCentral()

	  maven {
	    url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
	
	    // As of Gradle 5.1, you can limit this to only those
	    // dependencies you expect from it
	    content {
	      includeGroup 'org.bukkit'
	      includeGroup 'org.spigotmc'
	    }
	  }
	  /*
	   As Spigot-API depends on the BungeeCord ChatComponent-API,
	  we need to add the Sonatype OSS repository, as Gradle,
	  in comparison to maven, doesn't want to understand the ~/.m2
	  directory unless added using mavenLocal(). Maven usually just gets
	  it from there, as most people have run the BuildTools at least once.
	  This is therefore not needed if you're using the full Spigot/CraftBukkit,
	  or if you're using the Bukkit API.
	  */
	  maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
	  maven { url = 'https://oss.sonatype.org/content/repositories/central' }
	  // mavenLocal() // This is needed for CraftBukkit and Spigot.
}

dependencies {
  // Pick only one of these and read the comment in the repositories block.
  compileOnly 'org.spigotmc:spigot-api:1.18.2-R0.1-SNAPSHOT' // The Spigot API with no shadowing. Requires the OSS repo.
}

dependencies {

	

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
	manifest {
		attributes 'Main-Class': 'main.java.com.zonty.Main.Main'
	}
	
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
